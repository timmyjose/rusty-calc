name: e2e tests for RustyCalc
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'app/**'
      - '.github/workflows/e2e-tests.yml'
jobs:
  build_ios:
    name: Install, Build, and e2e Testing (iOS)
    runs-on: macos-14
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
          lfs: 'true'

      - name: Set LANG globally for subsequent steps
        run: echo "LANG=en_US.UTF-8" >> $GITHUB_ENV

      - name: Install detox cli
        run: npm install -g detox-cli

      - name: Install applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Checkout 
        uses: actions/checkout@v4
        with: 
          lfs: 'true'

      - name: Setup Project
        working-directory: app/packages/calc
        run: bash -c "yarn setup"

      - name: Pod install for iOS
        working-directory: app/packages/calc/ios
        run: npx pod-install

      - name: Detox build for iOS
        working-directory: app/packages/calc
        run: bash -c "detox build -c ios.release" > /dev/null

      - name: Detox e2e tests for iOS
        working-directory: app/packages/calc
        run: bash -c "NODE_OPTIONS='--max-old-space-size=4096' detox test -c ios.release"

  build_android:
    name: Install, Build, and e2e Testing (Android)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
          lfs: 'true'

      - name: Set LANG globally for subsequent steps
        run: echo "LANG=en_US.UTF-8" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create AVD, start emulator, and wait for emulator to be available
        run: |
          echo "Installing dependencies"
          sudo apt-get --quiet install --yes \
            libc6 \
            libdbus-1-3 \
            libfontconfig1 \
            libgcc1 \
            libpulse0 \
            libtinfo5 \
            libx11-6 \
            libxcb1 \
            libxdamage1 \
            libnss3 \
            libxcomposite1 \
            libxcursor1 \
            libxi6 \
            libxext6 \
            libxfixes3 \
            zlib1g \
            libgl1 \
            pulseaudio \
            socat

          echo "Starting adb server"
          adb start-server

          echo "Installing AOSP AVD system image"
          sdkmanager --install "system-images;android-31;google_apis;x86_64"

          echo "Creating AVD"
          avdmanager --verbose create avd --force --name "pixel_4" --device "pixel_4" --package "system-images;android-31;google_apis;x86_64"

          echo "Available AVDs..."
          echo $(${ANDROID_HOME}/emulator/emulator -list-avds)

          ANDROID_EMULATOR="pixel_4"
          echo "Starting emulator ${ANDROID_EMULATOR}"
          ${ANDROID_HOME}/emulator/emulator @${ANDROID_EMULATOR} -no-audio -no-window -use-system-libs -gpu auto &

          max_retries=10
          counter=0
          while [[ $(adb shell getprop init.svc.bootanim) != "stopped" ]]; do
            sleep 10
            adb devices
            echo "Emulator status: $(adb shell getprop init.svc.bootanim)"
            [[ $counter -eq $max_retries ]] && echo "Failed to start the emulator!" && exit 1
            counter=$((counter + 1))
          done
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}

      - name: Checkout 
        uses: actions/checkout@v4
        with: 
          lfs: 'true'

      - name: Setup Project
        working-directory: app/packages/calc
        run: bash -c "yarn setup"

      - name: Detox build for Android
        working-directory: app/packages/calc
        run: bash -c "detox build -c android.release" > /dev/null

      - name: Detox e2e tests for Android
        working-directory: app/packages/calc
        run: bash -c "NODE_OPTIONS='--max-old-space-size=4096' detox test -c android.release"

      - name: Stop Android emulator and adb server
        run: |
          max_retries=10
          counter=0
          echo "Killing emulator"
          adb devices | grep emulator | cut -f1 | while read -r emulator; do
            sleep 5
            [[ $counter -eq $max_retries ]] && echo "Failed to kill the emulator!" && exit 1
            adb -s $emulator emu kill
            counter=$((counter + 1))
          done

          echo "Killing adb server"
          adb kill-server